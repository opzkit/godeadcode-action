name: "golang deadcode action"
description: "Run the golang deadcode checker"
author: "opzkit"
inputs:
  packages:
    description: 'Run deadcode on these packages.'
    required: false
    default: './...'
  go-version-file:
    description: 'Path to the go.mod file.'
    required: false
  go-version:
    description: 'The go version to use when running deadcode check'
    required: false
  check-latest:
    description: 'Set this option to true if you want the action to always check for the latest available version that satisfies the version spec'
    default: false
  godeadcode-version:
    description: 'The deadcode version to use'
    required: false
    default: 'latest'

runs:
  using: 'composite'
  steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
      with:
        go-version: ${{ inputs.go-version }}
        go-version-file: ${{ inputs.go-version-file }}
        check-latest: ${{ inputs.check-latest }}
    - name: Get deadcode
      run: go install golang.org/x/tools/cmd/deadcode@${{ inputs.godeadcode-version }}
      shell: bash
    - name: Run go deadcode
      run: deadcode --test ${{ inputs.packages }}
      shell: bash

branding:
  icon: 'alert-triangle'
  color: 'red'
